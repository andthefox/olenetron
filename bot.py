#bot.py
# -*- coding: utf-8 -*-

import os
import random
import asyncio
import discord
import wget

from dotenv import load_dotenv
from discord.ext import commands
from delorean import Delorean
from delorean import epoch

load_dotenv()
TOKEN = os.environ.get('DISCORD_TOKEN')
STATUS = 'ü¶å | !–∫–∞–∫'

bot = commands.Bot(command_prefix='!')
bot.remove_command('help')

time_var = {}


async def custom_help(ctx, command=''):
    embed = discord.Embed(
        colour=discord.Colour.green()
    )

    coms = {
        '–∫–∞–∫': [' ü¶å –í—ã–≤–æ–¥–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ', '–í—ã–≤–æ–¥–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ \
        –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ'],
        '–∫–∏–Ω—å': [' üé≤ –ö–∏–¥–∞–µ—Ç –∫—É–±–∏–∫–∏', '–ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫–∏ *x* —Å—Ç–æ—Ä–æ–Ω *y* —Ä–∞–∑'],
        '–ø–µ—Ä–µ–≤–µ–¥–∏': [' üÖ∞ –ü–µ—Ä–µ–≤–æ–¥ —Ä–∞—Å–∫–ª–∞–¥–∫–∏ —Ç–µ–∫—Å—Ç–∞', '–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –∏–∑ –∞–Ω–≥–ª–∏–π—Å–∫–æ–π –≤ —Ä—É—Å—Å–∫—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É'],
        '—Å—Ç–∞—Ä—Ç': [' ‚è≤ –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä', '–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä'],
        '—Å—Ç–æ–ø': [' ‚è≤ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç', '–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç'],
    }

    if command == '':
        embed.set_author(name='–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ üõ†')
        for key in coms:
            value = coms[key]
            embed.add_field(name='!'+key, value=value[0], inline=False)
        embed.add_field(name='---', value='–ö—Å—Ç–∞—Ç–∏, –±–æ—Ç—É –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∏ –Ω–∞–ø—Ä—è–º—É—é üòé', inline=False)
    elif command == '–∫–∞–∫–æ—Ç—å' or command == '–∫–∞–∫–∞—Ç—å':
        kak_kakat = 'üßª **–Ø –í–ê–ú –ó–ê–ü–†–ï–©–ê–Æ** \n\t`—Å—Ä–∞—Ç—å`*!*'
        return await ctx.send(kak_kakat)
    else:
        embed.set_author(name='–ü–æ–∏—Å–∫ –ø–æ –∫–æ–º–∞–Ω–¥–µ üîé')
        if command in coms:
            embed.add_field(name='!' + command, value=coms[command][1], inline=False)
        else:
            embed.add_field(name='!' + command, value='–ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã ü§∑‚Äç‚ôÇÔ∏è', inline=False)

    await ctx.send('', embed=embed)


async def translate(ctx, sub_: str):
    if sub_:
        layout = dict(zip(map(ord, "qwertyuiop[]asdfghjkl;'zxcvbnm,./`"
                                   'QWERTYUIOP{}ASDFGHJKL:"ZXCVBNM<>?~&'),
                          "–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é.—ë"
                          '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ,–Å?'))
        await ctx.send(ctx.message.author.name + ', –ø–µ—Ä–µ–≤–æ–∂—É: \n`' + sub_ + ' -> ' + sub_.translate(layout) + '`')
    else:
        await ctx.send('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –≤ —Ä—É—Å—Å–∫—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É. –¢–µ–∫—Å—Ç –≤–≤–æ–¥–∏—Ç—Å—è –≤ –∫–∞–≤—ã—á–∫–∞—Ö')


@bot.event
async def on_ready():
    await bot.change_presence(activity=discord.Game(name=STATUS))
    print(bot.user.name + ' is ready.')


@bot.command(name='–∫–∞–∫')
async def run_help(ctx, command=''):
    await custom_help(ctx, command)


@bot.command(name='–ø–µ—Ä–µ–≤–µ–¥–∏')
async def run_translate(ctx, sub_: str = ''):
    await translate(ctx, sub_)


@bot.command(name='–∫–∏–Ω—å')
async def roll(ctx, number_of_sides: int = 20, number_of_dice: int = 1):
    if 1 < number_of_sides <= 100 and 0 < number_of_dice <= 50:
        dice = [
            '**' + str(random.choice(range(1, number_of_sides + 1))) + '**'
            for _ in range(number_of_dice)
        ]
        name = ctx.message.author.name
        await ctx.send(name + ' –∫–∏–¥–∞–µ—Ç –∫—É–±–∏–∫–∏ ({0}x{1}) üé≤üé≤ \n–í—ã–ø–∞–ª–æ:\
         \n'.format(number_of_dice, number_of_sides) + ', '.join(dice))
    else:
        await ctx.send('–ù–µ –∫–∏–Ω—É üòï')


@bot.command(name='—Å—Ç–∞—Ä—Ç')
async def start(ctx):
    dt = Delorean()
    name = ctx.message.author.name

    if name in time_var:
        response = name + ', —á–∞—Å–∏–∫–∏ —É–∂–µ —Ç–∏–∫–∞—é—Ç! ‚è≤'
    else:
        time_var[name] = dt.epoch
        response = name + ', –ø–æ–µ—Ö–∞–ª–∏! üí®'
    await ctx.send(response)


@bot.command(name='–æ–ª–µ–Ω—å')
async def deer(ctx, sub: str = '', sub_: str = ''):
    if sub == '–¥–µ–≥—Ä–∞–¥–Ω–∏':
        text = {
            '–ª–µ–≥–æ–Ω—å–∫–æ': '—ã—ã—ã',
            '—Å—Ä–µ–¥–Ω–µ': '—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã',
            '—Å–∏–ª—å–Ω–æ': '–Ø —Ä–æ–Ω—è—é –∑–∞–ø–∞–¥, –£!',
            '–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ': '–¢—ë–º–Ω–∞—è —Ç–µ–º–∞ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ —Ç–æ–ø'
        }
        if sub_:
            await ctx.send(text[sub_])
        else:
            msg = await ctx.send('https://media.giphy.com/media/XbLeWvIwOcd2g/source.gif')
            await ctx.message.edit(delete_after=0)
    elif sub == '–ø–µ—Ä–µ–≤–µ–¥–∏':
        await translate(ctx, sub_)
    elif sub == '–∫–∞–∫':
        if sub_ == '–ø–æ—Å—Ä–∞–ª':
            await ctx.send('–Ω–æ—Ä–º–∞–ª—å–Ω–æ üí©')
        else:
            await custom_help(ctx, sub_)
    else:
        await ctx.send('https://media.giphy.com/media/Qld1cd6a6QlWw/source.gif')


@bot.command(name='—Å—Ç–æ–ø')
async def stop(ctx):
    dte = Delorean()
    name = ctx.message.author.name

    if name in time_var:
        dts = time_var.pop(name)
        r = dte.epoch - dts
        rr = epoch(r)
        response = name + ', —Ç–≤–æ—ë –≤—Ä–µ–º—è: ' + rr.datetime.strftime("%H:%M:%S") + ' üèÅ'
    else:
        response = '–°—Ç–∞—Ä—Ç–∞ –Ω–µ –±—ã–ª–æ üòí'

    await ctx.send(response)


# @bot.command(name='create-channel')
# @commands.has_role('admin')


# @bot.loop()
# async def my_background_task(self):


@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.errors.CheckFailure):
        await ctx.send('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ª–Ω–æ–º–æ—á–∏–π.')

bot.run(TOKEN)
